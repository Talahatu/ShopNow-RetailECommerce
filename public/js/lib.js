/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/lib.js":
/*!*****************************!*\
  !*** ./resources/js/lib.js ***!
  \*****************************/
/***/ (() => {

eval("function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction tspBranchBound(distances) {\n  var n = distances.length;\n  var bestPath = null;\n  var bestCost = Infinity;\n\n  // Stack to store nodes during exploration\n  var stack = [{\n    city: 0,\n    path: [0],\n    visited: new Set([0]),\n    cost: 0\n  }];\n  while (stack.length > 0) {\n    var node = stack.pop();\n    if (node.path.length === n) {\n      // All cities visited, calculate total cost including returning to start\n      var cost = node.cost + distances[node.path[n - 1]][0];\n      if (cost < bestCost) {\n        bestPath = node.path;\n        bestCost = cost;\n      }\n    } else {\n      // Generate child nodes for unvisited cities\n      var unvisited = new Set(Array.from({\n        length: n\n      }, function (_, i) {\n        return i;\n      })).difference(node.visited);\n      var _iterator = _createForOfIteratorHelper(unvisited),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var city = _step.value;\n          var childPath = [].concat(_toConsumableArray(node.path), [city]);\n          var childCost = node.cost + distances[node.path[node.path.length - 1]][city];\n\n          // Prune nodes with cost exceeding current best\n          if (childCost < bestCost) {\n            stack.push({\n              city: city,\n              path: childPath,\n              visited: new Set(node.visited).add(city),\n              cost: childCost\n            });\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }\n  return [bestPath, bestCost];\n}\nfunction initBranchBound(nodes, currentPosition) {\n  console.log(\"Init Calculation...\");\n  var startNode = {\n    idDelivery: 0,\n    orderID: \"Lokasi saat ini\",\n    latitude: currentPosition.lat,\n    longitude: currentPosition[\"long\"]\n  };\n  var cities = [startNode].concat(_toConsumableArray(nodes));\n  // Create an empty distances matrix\n  var distances = new Array(cities.length).fill(null).map(function () {\n    return new Array(cities.length).fill(0);\n  });\n\n  // Calculate and populate distances matrix\n  for (var i = 0; i < cities.length; i++) {\n    for (var j = i + 1; j < cities.length; j++) {\n      var distance = haversineDistance(cities[i].latitude, cities[i].longitude, cities[j].latitude, cities[j].longitude);\n      // distance is symmetric\n      distances[i][j] = distance;\n      distances[j][i] = distance;\n    }\n  }\n  var _tspBranchBound = tspBranchBound(distances),\n    _tspBranchBound2 = _slicedToArray(_tspBranchBound, 2),\n    bestPath = _tspBranchBound2[0],\n    bestCost = _tspBranchBound2[1];\n  var result = bestPath.map(function (i) {\n    return cities[i];\n  });\n  result.push(startNode);\n  return result;\n}\nfunction toRadian(angle) {\n  return angle * (Math.PI / 180);\n}\nfunction haversineDistance(latitude, longitude, shopLatitude, shopLongitude) {\n  // Convert degrees to radians\n  var radiansLat1 = toRadian(latitude);\n  var radiansLat2 = toRadian(shopLatitude);\n  var radiansLon1 = toRadian(longitude);\n  var radiansLon2 = toRadian(shopLongitude);\n  var dLat = radiansLat2 - radiansLat1;\n  var dLon = radiansLon2 - radiansLon1;\n\n  // Earth's radius in kilometers\n  var earthRadius = 6371;\n  var d = earthRadius * 2 * Math.asin(Math.sqrt((1 - Math.cos(dLat) + Math.cos(radiansLat1) * Math.cos(radiansLat2) * (1 - Math.cos(dLon))) / 2));\n  return Math.round(d);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/lib.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/lib.js"]();
/******/ 	
/******/ })()
;